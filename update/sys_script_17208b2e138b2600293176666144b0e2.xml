<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>true</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_ifa_homelessness_agency_draw_item</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate drawn amounts</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	//gs.addInfoMessage('start rule');
	
	if (current.item_amount == Number(0)) {
		current.setAbortAction(true);
		if(gs.isInteractive()) {
			gs.addErrorMessage("Item amount must not equal zero");
		}
	}
	
	var award = new GlideRecord('x_ifa_homelessness_agency_award');  
	award.addQuery('sys_id', current.agency_draw.agency_award.sys_id); 
	award.query(); 
	
	while (award.next()){
		if (award.grant_amount == Number(0)) {
			current.setAbortAction(true);
			if(gs.isInteractive()) {
				gs.addErrorMessage("Draws cannot be made until grant amount has been entered");
			}
		}
		
		var budget_amount = Number(0);
			
		var budget = new GlideRecord('x_ifa_homelessness_agency_budget');  
		budget.addQuery('agency_award.sys_id', award.sys_id); 
		budget.addQuery('budget_effective_date','<=', new GlideDate());	
		budget.orderByDesc('budget_effective_date');  
		budget.setLimit(1);  
		budget.query(); 

		while (budget.next()){
			budget_amount = Number(budget.budget_total_amount);
		}
			
		if (Number(award.grant_amount) != Number(budget_amount)) {
			current.setAbortAction(true);
			if(gs.isInteractive()) {
				gs.addErrorMessage("Draws cannot be made until the budget has been setup properly");
			}
		}
	}	
	
	// Determine the Agency Award Draw Amount
	var gr = new GlideRecord('x_ifa_homelessness_agency_award');
	gr.addQuery('sys_id',current.agency_draw.agency_award.sys_id);
	gr.query();

	while (gr.next()){
		var agg1 = new GlideAggregate('x_ifa_homelessness_agency_draw_item');
		agg1.addQuery('agency_draw.agency_award.sys_id',current.agency_draw.agency_award.sys_id);
		agg1.addQuery('sys_id', '!=', current.sys_id);
		agg1.addAggregate('SUM','item_amount');
		agg1.groupBy('agency_draw.agency_award');
		agg1.query();
		
		var drawnAmount = Number(0);
		
		if(agg1.hasNext()) {
			while(agg1.next()){
				drawnAmount = Number(agg1.getAggregate('SUM','item_amount')) + Number(current.item_amount);
			}			
		} else {
				drawnAmount = Number(current.item_amount);			
		}
		
		// Abort the transaction if the grant amount drawn exceeds the grant amount
		if (drawnAmount > gr.grant_amount) {
			current.setAbortAction(true);
			if(gs.isInteractive()) {
				gs.addErrorMessage("Total grant amount drawn $" + drawnAmount + " exceeds the total grant amount $" + gr.grant_amount);	
			}			
		} 
	}
	
	
	// -  Abort the transaction if the budget amount drawn exceeds the budget amount
	var budget = new GlideRecord('x_ifa_homelessness_agency_budget');  
	budget.addQuery('agency_award.sys_id', current.agency_draw.agency_award.sys_id); 
	budget.orderByDesc('budget_effective_date');  
	budget.setLimit(1);  
	budget.query(); 
	
	while (budget.next()){
		var agg2 = new GlideAggregate('x_ifa_homelessness_agency_draw_item');
		agg2.addQuery('agency_draw.agency_award.sys_id',current.agency_draw.agency_award.sys_id);
		agg2.addQuery('sys_id', '!=', current.sys_id);
		agg2.addAggregate('SUM','item_amount');
		agg2.groupBy('agency_draw.agency_award');
		agg2.query();
		
		var budgetDrawn = Number(0);
		
		if(agg2.hasNext()) {
			while(agg2.next()){
				budgetDrawn = Number(agg2.getAggregate('SUM','item_amount')) + Number(current.item_amount);
			}			
		} else {
				budgetDrawn = Number(current.item_amount);			
		}
		
		if (budgetDrawn > budget.budget_total_amount) {
			current.setAbortAction(true);
			if(gs.isInteractive()) {
				gs.addErrorMessage("Total budget amount drawn $" + budgetDrawn + " exceeds the total budget amount $" + budget.budget_total_amount);	
			}			
		}
			
		// -  Abort the transaction if the budget item amount drawn exceeds the budget item amount
		var budgetItem = new GlideRecord('x_ifa_homelessness_agency_budget_item');  
		budgetItem.addQuery('budget_item.sys_id', current.budget_item.sys_id); 
		budgetItem.addQuery('agency_budget.sys_id', budget.sys_id); 
		budgetItem.query(); 

		while (budgetItem.next()){
			var agg3 = new GlideAggregate('x_ifa_homelessness_agency_draw_item');
			agg3.addQuery('agency_draw.agency_award.sys_id',current.agency_draw.agency_award.sys_id);
			agg3.addQuery('budget_item.sys_id',current.budget_item.sys_id);
			agg3.addQuery('sys_id', '!=', current.sys_id);
			agg3.addAggregate('SUM','item_amount');
			agg3.groupBy('agency_draw.agency_award');
			agg3.query();

			var itemDrawn = Number(0);

			if(agg3.hasNext()) {
				while(agg3.next()){
					itemDrawn = Number(agg3.getAggregate('SUM','item_amount')) + Number(current.item_amount);
				}			
			} else {
					itemDrawn = Number(current.item_amount);			
			}
						
			if (itemDrawn > budgetItem.item_amount) {
				current.setAbortAction(true);
				if(gs.isInteractive()) {
					gs.addErrorMessage("Total budget item - " + budgetItem.budget_item.budget_item_desc + " amount drawn $" + itemDrawn + " exceeds the total budget item amount $" + budgetItem.item_amount);	
				}
			}
		}
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>bob.vipondSN</sys_created_by>
        <sys_created_on>2016-11-15 23:00:19</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>17208b2e138b2600293176666144b0e2</sys_id>
        <sys_mod_count>76</sys_mod_count>
        <sys_name>Validate drawn amounts</sys_name>
        <sys_overrides/>
        <sys_package display_value="Homelessness" source="x_ifa_homelessness">6de0807e13b96600638e74c66144b027</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Homelessness">6de0807e13b96600638e74c66144b027</sys_scope>
        <sys_update_name>sys_script_17208b2e138b2600293176666144b0e2</sys_update_name>
        <sys_updated_by>bob.vipondSN</sys_updated_by>
        <sys_updated_on>2016-12-15 21:48:26</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=17208b2e138b2600293176666144b0e2"/>
</record_update>
